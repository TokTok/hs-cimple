load("@ai_formation_hazel//tools:mangling.bzl", "hazel_library")
load("@rules_haskell//haskell:defs.bzl", "haskell_library")
load("//third_party/haskell/alex:build_defs.bzl", "alex_lexer")
load("//third_party/haskell/happy:build_defs.bzl", "happy_parser")
load("//third_party/haskell/hspec-discover:build_defs.bzl", "hspec_test")
load("//tools/project:build_defs.bzl", "project")

project()

alex_lexer(
    name = "Lexer",
    src = "src/Language/Cimple/Lexer.x",
)

haskell_library(
    name = "lexer",
    srcs = [
        "src/Language/Cimple/Lexer.hs",
        "src/Language/Cimple/Tokens.hs",
    ],
    src_strip_prefix = "src",
    visibility = ["//hs-cimple:__subpackages__"],
    deps = [
        hazel_library("aeson"),
        hazel_library("array"),
        hazel_library("base"),
    ],
)

happy_parser(
    name = "Parser",
    src = "src/Language/Cimple/Parser.y",
    preproc = "expand_yacc.pl",
)

haskell_library(
    name = "parser",
    srcs = [
        "src/Language/Cimple/Ast.hs",
        "src/Language/Cimple/Parser.hs",
    ],
    src_strip_prefix = "src",
    visibility = ["//hs-cimple:__subpackages__"],
    deps = [
        ":lexer",
        hazel_library("aeson"),
        hazel_library("array"),
        hazel_library("base"),
        hazel_library("data-fix"),
        hazel_library("recursion-schemes"),
        hazel_library("transformers-compat"),
    ],
)

happy_parser(
    name = "TreeParser",
    src = "src/Language/Cimple/TreeParser.y",
    preproc = "expand_yacc.pl",
)

haskell_library(
    name = "tree_parser",
    srcs = ["src/Language/Cimple/TreeParser.hs"],
    src_strip_prefix = "src",
    visibility = ["//hs-cimple:__subpackages__"],
    deps = [
        ":lexer",
        ":parser",
        hazel_library("array"),
        hazel_library("base"),
        hazel_library("data-fix"),
        hazel_library("text"),
    ],
)

haskell_library(
    name = "hs-cimple",
    srcs = glob(
        ["src/**/*.*hs"],
        exclude = [
            "src/Language/Cimple/Ast.hs",
            "src/Language/Cimple/Tokens.hs",
        ],
    ),
    src_strip_prefix = "src",
    version = "0.0.14",
    visibility = ["//visibility:public"],
    deps = [
        ":lexer",
        ":parser",
        ":tree_parser",
        hazel_library("aeson"),
        hazel_library("ansi-wl-pprint"),
        hazel_library("array"),
        hazel_library("base"),
        hazel_library("bytestring"),
        hazel_library("containers"),
        hazel_library("data-fix"),
        hazel_library("filepath"),
        hazel_library("groom"),
        hazel_library("monad-parallel"),
        hazel_library("mtl"),
        hazel_library("split"),
        hazel_library("text"),
        hazel_library("transformers-compat"),
    ],
)

hspec_test(
    name = "testsuite",
    size = "small",
    deps = [
        ":hs-cimple",
        hazel_library("ansi-wl-pprint"),
        hazel_library("base"),
        hazel_library("data-fix"),
        hazel_library("hspec"),
        hazel_library("text"),
        hazel_library("transformers-compat"),
    ],
)
